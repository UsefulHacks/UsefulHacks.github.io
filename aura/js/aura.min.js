import*as THREE from"https://cdnjs.cloudflare.com/ajax/libs/three.js/r127/three.module.min.js";
// import triangles from"./triangles.js";import{msToSmpteStringhhmmss}from"./smpte.js";
let glHueOffset=0,glMaterial=null,glRenderId=null;function main(e){var t=document.querySelector("#webGLCanvas");const x=new THREE.WebGLRenderer({canvas:t,alpha:!0});const r=new THREE.PerspectiveCamera(75,2,.1,100);r.position.z=20,r.position.y=0,r.position.x=-3;const i=new THREE.Scene;i.background=null;{const H=new THREE.DirectionalLight(16777215,1);H.position.set(-1,2,4),i.add(H)}const n=[];const o=[];const y=[];var a=function(t,n){let o=[],y=1e6,x=-1e6,r=1e6,a=-1e6;var i=t.length;for(let e=0;e<i;e++){var s=t[e];s.x1>x&&(x=s.x1),s.x2>x&&(x=s.x2),s.x3>x&&(x=s.x3),s.y1>a&&(a=s.y1),s.y2>a&&(a=s.y2),s.y3>a&&(a=s.y3),s.x1<y&&(y=s.x1),s.x2<y&&(y=s.x2),s.x3<y&&(y=s.x3),s.y1<r&&(r=s.y1),s.y2<r&&(r=s.y2),s.y3<r&&(r=s.y3)}var l=(e,t,n)=>(e-.5*(t+n))/(.5*(n-t));for(let e=0;e<i;e++){var c=t[e];o.push(l(c.x1,y,x)*n*2*.5,l(c.y1,r,a)*n,0,l(c.x2,y,x)*n*2*.5,l(c.y2,r,a)*n,0,l(c.x3,y,x)*n*2*.5,l(c.y3,r,a)*n,0)}return o}(triangles,20);let s=0;for(let e=0;e<a.length;e+=3)n.push(a[e],a[e+1],a[e+2]),o.push(0!=e&&!(e%6),0!=e&&!(e%3)||!(e%6)),y.push(s),s++;const l=new THREE.BufferGeometry;l.setAttribute("position",new THREE.BufferAttribute(new Float32Array(n),3)),l.setAttribute("normal",new THREE.BufferAttribute(new Float32Array([]),3)),l.setAttribute("uv",new THREE.BufferAttribute(new Float32Array(o),2)),l.setIndex(y);var c;glMaterial=(c=e,new THREE.ShaderMaterial({uniforms:{hsvOffset:{value:new THREE.Vector3(0,0,0)},texture:{value:c},uvOffset:{value:new THREE.Vector2(0,0)},color1:{value:new THREE.Color("red")},color2:{value:new THREE.Color("green")}},vertexShader:`
        varying vec2 vUv;
    
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);
        }
      `,fragmentShader:`
        uniform vec3 hsvOffset;
        uniform vec3 color1;
        uniform vec3 color2;
        // The uv offset uniform we defined in js code
        uniform vec2 uvOffset;
        // The texture uniform we defined in js code
        // uniform sampler2D texture;
          
        varying vec2 vUv;

        vec3 hsv2rgb(float h, float s, float v)
        {
          h = fract(h + hsvOffset[0]);  // Modulate hue component
          vec3 c = smoothstep(2./6., 1./6., abs(h - vec3(0.5, 2./6., 4./6.)));
          c.r = 1.-c.r;
          return mix(vec3(s), vec3(1.0), c) * v;
        }

        void main() {
          gl_FragColor = vec4(hsv2rgb((vUv.x+vUv.y), 0.0, 1.0), 0.750); // full gradient
          // float spectraPortion = 1.0; // visible portion of full gradient
          // gl_FragColor = vec4(hsv2rgb((vUv.x+vUv.y)*spectraPortion, 0.0, 1.0), 0.750);
        }
      `}));const d=function(e,t,n){const o=new THREE.Mesh(e,glMaterial);return i.add(o),o.position.x=t,o.position.y=n,o}(l,0,0),u=function(e){var t=new THREE.CircleGeometry(15,32);const n=document.createElement("canvas"),o=n.getContext("2d"),y=o.createRadialGradient(150,75,10,100,75,80);y.addColorStop(0,"white"),y.addColorStop(1,"black"),o.arc(150,75,150,0,2*Math.PI),o.fillStyle=y,o.fill();const x=new THREE.Texture(n);x.needsUpdate=!0;var r=new THREE.MeshBasicMaterial({alphaMap:x,side:THREE.DoubleSide,opacity:.25,transparent:!0});const a=new THREE.Mesh(t,r);return i.add(a),a.position.x=e+.14,a.position.z=-.01,a}(0);let m;let v=.1;const f=.998,g=5e-4,h=3.5;let p=0;function E(e){p++,void 0===m&&(m=e),glHueOffset+=v,1<glHueOffset&&(glHueOffset=1-glHueOffset),glMaterial.uniforms.hsvOffset.value=[glHueOffset,0,0];var t,n,o,y=p*g;(y=Math.pow(y,3))>h&&(p=0),d.scale.x=d.scale.y=y,u.scale.x=u.scale.y=y,u.material.opacity*=f,t=x,n=t.domElement,o=n.clientWidth,e=n.clientHeight,(n=n.width!==o||n.height!==e)&&t.setSize(o,e,!1),n&&(n=x.domElement,r.aspect=n.clientWidth/n.clientHeight,r.updateProjectionMatrix()),p%30||(document.getElementById("timecodeDiv").textContent=msToSmpteStringhhmmss(y/h*30*6e4),console.log(msToSmpteStringhhmmss(y/h*30*6e4))),x.render(i,r),glRenderId=requestAnimationFrame(E)}const w=()=>{const e=document.getElementById("pauseBtn");console.log("pauseBtn BUTTON CLICKED"),"Pause"==e.textContent?(e.textContent="Resume",null!=glRenderId&&cancelAnimationFrame(glRenderId)):(e.textContent="Pause",glRenderId=requestAnimationFrame(E))},T=document.getElementById("pauseBtn");T.addEventListener("click",e=>{w(),e.preventDefault()}),window.addEventListener("keyup",e=>{var t;e.defaultPrevented||(" "!==(t=e.key||e.keyCode)&&32!=t||(e.preventDefault(),w()))});window.onresize=()=>{x.setSize(window.innerWidth,window.innerHeight)},glRenderId=requestAnimationFrame(E)}const constraints={audio:!1,video:!0};navigator.mediaDevices.getUserMedia(constraints).then(function(e){var t=document.getElementById("videoBg");t.srcObject=e,t.onloadedmetadata=function(e){t.play(),main()}}).catch(function(e){console.log(e.name+": "+e.message)});const toggleVideo=()=>{const t=document.getElementById("videoBg"),n=document.getElementById("videoMuteBtn");if(console.log("toggleVideo BUTTON CLICKED"),"Close eyes"==n.textContent){const e=t.srcObject,o=e.getTracks();o.forEach(e=>e.stop()),n.textContent="Open eyes"}else navigator.mediaDevices.getUserMedia(constraints).then(function(e){t.srcObject=e,t.onloadedmetadata=function(e){t.play(),n.textContent="Close eyes"}}).catch(function(e){console.log(e.name+": "+e.message)})},eyesBtn=document.getElementById("videoMuteBtn");eyesBtn.addEventListener("click",toggleVideo);const msToSmpteString=(e,t=30)=>{var n=e/36e5,o=Math.floor(n),y=60*(n-o),e=Math.floor(y),n=60*(y-e),y=Math.floor(n),t=Math.floor((n-y)*t);return`${o<10?"0":""}${o}:${e<10?"0":""}${e}:${n<10?"0":""}${y};${t<10?"0":""}${t}`},msToSmpteStringhhmmss=(e,t=0)=>{var n=e/36e5,o=Math.floor(n),e=60*(n-o),n=Math.floor(e),e=60*(e-n);return`${o<10?"0":""}${o}:${n<10?"0":""}${n}:${e<10?"0":""}${Math.floor(e)}`};
      // export default msToSmpteString;
      const triangles=[{x1:330,y1:140,x2:300,y2:140,x3:285,y3:125},{x1:240,y1:100,x2:240,y2:60,x3:250,y3:90},{x1:280,y1:110,x2:330,y2:140,x3:285,y3:125},{x1:330,y1:140,x2:290,y2:150,x3:300,y3:140},{x1:280,y1:90,x2:320,y2:80,x3:325,y3:90},{x1:280,y1:80,x2:280,y2:50,x3:320,y3:80},{x1:280,y1:90,x2:280,y2:80,x3:320,y3:80},{x1:280,y1:90,x2:325,y2:90,x3:330,y3:110},{x1:230,y1:190,x2:240,y2:170,x3:280,y3:170},{x1:240,y1:60,x2:210,y2:90,x3:240,y3:100},{x1:240,y1:60,x2:210,y2:90,x3:200,y3:70},{x1:280,y1:90,x2:330,y2:110,x3:330,y3:140},{x1:280,y1:90,x2:330,y2:110,x3:320,y3:80},{x1:280,y1:90,x2:330,y2:140,x3:280,y3:110},{x1:330,y1:140,x2:280,y2:110,x3:290,y3:150},{x1:280,y1:110,x2:280,y2:90,x3:250,y3:90},{x1:250,y1:90,x2:280,y2:110,x3:280,y3:90},{x1:290,y1:150,x2:330,y2:140,x3:280,y3:110},{x1:290,y1:150,x2:330,y2:140,x3:320,y3:170},{x1:290,y1:150,x2:320,y2:170,x3:280,y3:170},{x1:290,y1:150,x2:280,y2:170,x3:250,y3:170},{x1:280,y1:170,x2:320,y2:170,x3:270,y3:200},{x1:270,y1:200,x2:280,y2:170,x3:250,y3:200},{x1:250,y1:200,x2:280,y2:170,x3:270,y3:200},{x1:250,y1:200,x2:280,y2:170,x3:230,y3:190},{x1:230,y1:190,x2:280,y2:170,x3:250,y3:200},{x1:230,y1:190,x2:280,y2:170,x3:250,y3:170},{x1:230,y1:190,x2:250,y2:200,x3:210,y3:210},{x1:210,y1:210,x2:250,y2:200,x3:230,y3:190},{x1:210,y1:210,x2:230,y2:190,x3:190,y3:180},{x1:190,y1:180,x2:230,y2:190,x3:210,y3:210},{x1:190,y1:180,x2:230,y2:190,x3:250,y3:170},{x1:190,y1:180,x2:210,y2:210,x3:160,y3:170},{x1:250,y1:170,x2:280,y2:170,x3:290,y3:150},{x1:200,y1:70,x2:210,y2:90,x3:150,y3:70},{x1:200,y1:70,x2:210,y2:90,x3:240,y3:60},{x1:150,y1:70,x2:200,y2:70,x3:210,y3:90},{x2:200,y2:70,x3:220,y3:50,x1:240,y1:60},{x1:240,y1:100,x2:250,y2:90,x3:240,y3:60},{x1:240,y1:60,x2:240,y2:100,x3:210,y3:90},{x1:240,y1:60,x2:240,y2:100,x3:250,y3:90},{x1:240,y1:60,x2:240,y2:100,x3:210,y3:90},{x1:210,y1:90,x2:180,y2:100,x3:150,y3:70},{x1:240,y1:60,x2:200,y2:70,x3:210,y3:90},{x1:240,y1:60,x2:200,y2:70,x3:210,y3:90},{x1:210,y1:90,x2:240,y2:60,x3:240,y3:100},{x1:210,y1:90,x2:240,y2:100,x3:240,y3:60},{x1:250,y1:90,x2:240,y2:60,x3:280,y3:50},{x1:250,y1:90,x2:240,y2:60,x3:280,y3:50},{x1:280,y1:90,x2:320,y2:80,x3:280,y3:50},{x1:280,y1:50,x2:280,y2:90,x3:250,y3:90},{x1:280,y1:50,x2:280,y2:90,x3:250,y3:90},{x1:250,y1:90,x2:280,y2:50,x3:280,y3:90},{x1:280,y1:50,x2:240,y2:60,x3:250,y3:90},{x1:250,y1:90,x2:280,y2:90,x3:280,y3:50}];
      export default triangles;export{msToSmpteString,msToSmpteStringhhmmss,triangles};